apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["compileSdkVersion"]
    buildToolsVersion globalConfiguration["buildToolsVersion"]
    defaultConfig {
        applicationId globalConfiguration["applicationId"]
        minSdkVersion globalConfiguration["minSdkVersion"]
        targetSdkVersion globalConfiguration["targetSdkVersion"]
        versionCode globalConfiguration["versionCode"]
        versionName globalConfiguration["versionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
    }

    sourceSets {
        // Reference data's test classes manually so we can use them in app's tests
        // https://stackoverflow.com/a/39868674/4328579
        androidTest {
            java.srcDir project(':data').file("src/androidTest/java")
        }
        test {
            java.srcDir project(':data').file("src/test/java")
        }
    }

    testOptions {
        // We tell Gradle to return default values for calls which are not mocked.
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            debuggable true
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api project(':data')

    def dependencies = rootProject.ext

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${dependencies.appCompat}"
    implementation "androidx.core:core-ktx:${dependencies.androidXCore}"
    implementation "androidx.constraintlayout:constraintlayout:${dependencies.constraintLayout}"
    implementation "com.google.android.material:material:${dependencies.material}"

    implementation "androidx.lifecycle:lifecycle-extensions:${dependencies.architecture}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${dependencies.architecture}"

    api "com.google.dagger:dagger:${dependencies.dagger}"
    kapt "com.google.dagger:dagger-compiler:${dependencies.dagger}"

    implementation "io.reactivex.rxjava2:rxandroid:${dependencies.rxAndroid}"
    implementation "com.squareup.picasso:picasso:${dependencies.picasso}"


    // TESTING
    testImplementation "androidx.test.ext:junit:${dependencies.jUnit}"
    testImplementation "io.mockk:mockk:${dependencies.mockk}"
    kaptTest "com.google.dagger:dagger-compiler:${dependencies.dagger}"

    androidTestImplementation "androidx.test.ext:junit:${dependencies.jUnit}"
    androidTestImplementation "androidx.test:runner:${dependencies.testRunner}"
    androidTestImplementation "androidx.test:rules:${dependencies.testRules}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${dependencies.espresso}"
    androidTestImplementation "io.mockk:mockk-android:${dependencies.mockk}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${dependencies.okHttp}"
}
